name: build package

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  cancel:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
  build-rpm:
    name: Run on CentOS 7
    needs: cancel
    runs-on: ubuntu-latest
    container:
      image: "registry.openanolis.cn/openanolis/anolisos:8.9"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies and build obdiag rpm
        run: |
          yum install -y wget rpm-build gcc gcc-c++ make
          wget  --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh --no-check-certificate
          sh Miniconda3-latest-Linux-x86_64.sh -p /opt/miniconda3 -b
          export PATH=/opt/miniconda3/bin:$PATH
          /opt/miniconda3/bin/conda init
          /opt/miniconda3/bin/conda create --name obdiag python=3.11 -y
          source /opt/miniconda3/bin/activate obdiag
          /opt/miniconda3/envs/obdiag/bin/python3  -m pip install --upgrade pip setuptools wheel
          source activate obdiag
          pip3 install -r requirements3.txt
          bash dev_helper.sh pack

      - name: "Upload rpm"
        uses: actions/upload-artifact@v4
        with:
          name: obdiag-rpm-packages
          path: |
            /github/home/rpmbuild/RPMS/x86_64/oceanbase-diagnostic-tool-*.rpm
          retention-days: 3

  convert-to-deb:
    needs: build-rpm
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download RPM Artifact
        uses: actions/download-artifact@v4
        with:
          name: obdiag-rpm-packages
          path: .

      - name: Install Alien
        run: |
          sudo apt-get update
          sudo apt-get install -y alien

      - name: Convert RPM to DEB
        run: |
          sudo alien -k --scripts oceanbase-diagnostic-tool-*.rpm
          pwd

      - name: Upload DEB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: obdiag-deb-package
          path: ./oceanbase-diagnostic-tool_*.deb
          retention-days: 3
  run-with-observer:
    name: run-with-observer
    runs-on: ubuntu-latest
    needs: build-rpm
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download RPM Artifact
        uses: actions/download-artifact@v4
        with:
          name: obdiag-rpm-packages
          path: .
      - name: install obdiag
        run: |
          set -e
          docker run -id --name "obdiag_ob" oceanbase/oceanbase-ce:latest
          bash workflow_data/wait_observer_run.sh 
          docker cp oceanbase-diagnostic-tool-*.rpm obdiag_ob:/root/
          docker exec -i obdiag_ob /bin/bash -c "yum install -y /root/oceanbase-diagnostic-tool-*.rpm"
          docker cp workflow_data/config.yml obdiag_ob:/root/.obdiag/config.yml
      - name: run obdiag test
        run: |
          set -e
          docker cp workflow_data/run_obdiag_test.sh obdiag_ob:/root/run_obdiag_test.sh
          docker exec -i obdiag_ob /bin/bash -c "obclient -h127.0.0.1 -u root -P2881 -e 'select version();'"
          docker exec -i obdiag_ob /bin/bash -c "export tag=latest && sh /root/run_obdiag_test.sh"
          echo "obdiag install success"
          docker rm -f obdiag_ob
  run-with-observer-4_2_1:
    name: run-with-observer-4_2_1
    runs-on: ubuntu-latest
    needs: build-rpm
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download RPM Artifact
        uses: actions/download-artifact@v4
        with:
          name: obdiag-rpm-packages
          path: .
      - name: install obdiag
        run: |
          set -e
          export tag="4.2.1"
          docker run -id --name "obdiag_ob" -e tag=${tag} oceanbase/oceanbase-ce:${tag}
          bash workflow_data/wait_observer_run.sh
          docker cp oceanbase-diagnostic-tool-*.rpm obdiag_ob:/root/
          docker exec -i obdiag_ob /bin/bash -c "yum install -y /root/oceanbase-diagnostic-tool-*.rpm"
          docker cp workflow_data/config.yml.421 obdiag_ob:/root/.obdiag/config.yml
      - name: run obdiag test
        run: |
          set -e
          docker cp workflow_data/run_obdiag_test.sh obdiag_ob:/root/run_obdiag_test.sh
          docker exec -i obdiag_ob /bin/bash -c "export tag=4.2.1 && sh /root/run_obdiag_test.sh"
          echo "obdiag install success"
          docker rm -f obdiag_ob
  run-with-observer-4_2_5:
    name: run-with-observer-4_2_5
    runs-on: ubuntu-latest
    needs: build-rpm
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download RPM Artifact
        uses: actions/download-artifact@v4
        with:
          name: obdiag-rpm-packages
          path: .
      - name: install obdiag
        run: |
          set -e
          export tag="4.2.5"
          docker run -id --name "obdiag_ob" -e tag=${tag} oceanbase/oceanbase-ce:4.2.5.1-101000092024120918
          bash workflow_data/wait_observer_run.sh
          docker cp oceanbase-diagnostic-tool-*.rpm obdiag_ob:/root/
          docker exec -i obdiag_ob /bin/bash -c "yum install -y /root/oceanbase-diagnostic-tool-*.rpm"
          docker cp workflow_data/config.yml.421 obdiag_ob:/root/.obdiag/config.yml
      - name: run obdiag test
        run: |
          set -e
          docker cp workflow_data/run_obdiag_test.sh obdiag_ob:/root/run_obdiag_test.sh
          docker exec -i obdiag_ob /bin/bash -c "export tag=4.2.5 && sh /root/run_obdiag_test.sh"
          echo "obdiag install success"
          docker rm -f obdiag_ob
  run-with-observer-4_3_5:
    name: run-with-observer-4_3_5
    runs-on: ubuntu-latest
    needs: build-rpm
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download RPM Artifact
        uses: actions/download-artifact@v4
        with:
          name: obdiag-rpm-packages
          path: .
      - name: install obdiag
        run: |
          set -e
          export tag="4.3.5"
          docker run -id --name "obdiag_ob" -e tag=${tag} oceanbase/oceanbase-ce:4.3.5-lts
          bash workflow_data/wait_observer_run.sh
          docker cp oceanbase-diagnostic-tool-*.rpm obdiag_ob:/root/
          docker exec -i obdiag_ob /bin/bash -c "yum install -y /root/oceanbase-diagnostic-tool-*.rpm"
          docker cp workflow_data/config.yml obdiag_ob:/root/.obdiag/config.yml
      - name: run obdiag test
        run: |
          set -e
          docker cp workflow_data/run_obdiag_test.sh obdiag_ob:/root/run_obdiag_test.sh
          docker exec -i obdiag_ob /bin/bash -c "export tag=4.3.5 && sh /root/run_obdiag_test.sh"
          echo "obdiag install success"
          docker rm -f obdiag_ob